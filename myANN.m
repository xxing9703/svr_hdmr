function [y1] = myANN(x1)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 16-Jun-2015 11:41:41.
% 
% [y1] = myNeuralNetworkFunction(x1) takes these arguments:
%   x = 7xQ matrix, input #1
% and returns:
%   y = 1xQ matrix, output #1
% where Q is the number of samples.

%#ok<*RPMT0>

  % ===== NEURAL NETWORK CONSTANTS =====
  
  % Input 1
  x1_step1_xoffset = [-1;-1;-1;-1;-1;-1;-1];
  x1_step1_gain = [1;1;1;1;1;1;1];
  x1_step1_ymin = -1;
  
  % Layer 1
  b1 = [-0.069027079021813473;-0.53679107865943865;0.29195347905565777;1.0640305018553842;0.45488316954283275;1.0050148112317412;0.052413670322465765;0.27460460703361861;-0.080678451805455853;0.45970130383444247];
  IW1_1 = [-0.13892228513893268 -0.56935266861592404 0.079951751474574118 -0.77355046073649103 0.26484445115107108 -0.27619684756377477 0.67203049469853982;0.68123945562552402 -0.13974848419248334 -0.24844770771736169 -0.1580858613727901 -0.74797279217439694 0.53040578208215206 -0.21088179191715001;-0.89590730450855982 -0.30103016690884926 0.028693652313127725 0.46723926669899679 0.02672353430051513 0.48333919364810968 -0.051000945436598374;-0.12616175194986315 -0.66094640062620968 1.402667878330399 -0.066597547708995841 0.073570551969828826 -0.23914495439932307 0.79289130622692405;-0.29195045237937822 -0.71466315993392404 0.039832395969004571 -0.2547065385833796 0.28457478682752557 -0.36492488589048677 -0.88972457093668456;0.12508674804162709 0.52058060062743616 -0.14111787979556875 0.43553787979867181 -0.22834058767015625 -0.098288065477412867 1.6006098439230494;0.12186396226336367 -0.15935486403005519 0.1934994248145834 -0.059204837327158026 -0.14642231292573274 -0.78486041755853897 0.044301777219149033;0.10443909244337622 -0.19040694933493771 -0.74273175027627025 0.2058503677636683 -0.0024281104979204373 -0.2200405256566606 1.209948244194297;0.034592395281041667 0.11640456343601281 -0.32150084038971249 -0.13466469102924533 0.61366555978182447 -0.10445836648639285 -0.30542104400389641;0.78755040042136981 -1.0928725712866407 -0.53254526637645938 0.31799754486251919 -0.20961140657729813 0.18405366039243906 0.48060240362876189];
  
  % Layer 2
  b2 = -0.20478494084803803;
  LW2_1 = [-0.6783874452523998 -0.48391469084394678 -0.7390464421097217 1.2149341701394496 0.89707090481149376 -0.8042474523777764 -0.81956937695627907 1.2578257525138887 -1.0776051786287149 -0.86503924821049327];
  
  % Output 1
  y1_step1_ymin = -1;
  y1_step1_gain = 9.38526513374003;
  y1_step1_xoffset = 0.2354;
  
  % ===== SIMULATION ========
  
  % Dimensions
  Q = size(x1,2); % samples
  
  % Input 1
  xp1 = mapminmax_apply(x1,x1_step1_gain,x1_step1_xoffset,x1_step1_ymin);
  
  % Layer 1
  a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*xp1);
  
  % Layer 2
  a2 = repmat(b2,1,Q) + LW2_1*a1;
  
  % Output 1
  y1 = mapminmax_reverse(a2,y1_step1_gain,y1_step1_xoffset,y1_step1_ymin);
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings_gain,settings_xoffset,settings_ymin)
  y = bsxfun(@minus,x,settings_xoffset);
  y = bsxfun(@times,y,settings_gain);
  y = bsxfun(@plus,y,settings_ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings_gain,settings_xoffset,settings_ymin)
  x = bsxfun(@minus,y,settings_ymin);
  x = bsxfun(@rdivide,x,settings_gain);
  x = bsxfun(@plus,x,settings_xoffset);
end
